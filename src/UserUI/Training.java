/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserUI;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import onlinepetstore.MyPets;
import onlinepetstore.MyPetsList;
import onlinepetstore.OnlineStore;
import onlinepetstore.PetCare;
import onlinepetstore.PetCareAppointment;
import onlinepetstore.PetDirectory;
import onlinepetstore.Pricing;
import onlinepetstore.PricingDirectory;
import onlinepetstore.Service;
import onlinepetstore.User;

/**
 *
 * @author moukthikamanapati
 */
public class Training extends javax.swing.JPanel {

    /**
     * Creates new form Training
     */
//    public Training() {
//        initComponents();
//    }
    JPanel service,userprocess;
    PetDirectory petDirectory;
    PricingDirectory pricingDirectory;
    User user;
    PetCareAppointment papp;
    private MyPetsList mypetslist;
    private OnlineStore os;
    private PetCare app;
    private MyPetsList mypets;
   
    Training(JPanel service, PetDirectory petDirectory) {
         initComponents();
       this.service = service;
       this.petDirectory = petDirectory;
    }

    Training(JPanel service, OnlineStore os, User user) {
        initComponents();
        this.service = service;
        this.os = os;
        this.petDirectory = os.getPetDirectory();
        this.pricingDirectory = os.getPricingDirectory();
        this.user = user;
        this.papp = os.getPapp();
        this.mypetslist = os.getMypetList();
        this.mypets = os.getMypetList();
        populatePricingTable();
       
    
    populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pricing = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        mypet = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(123, 69, 12));

        pricing.setBackground(new java.awt.Color(219, 210, 196));
        pricing.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        pricing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Service", "price"
            }
        ));
        pricing.setRowHeight(18);
        jScrollPane1.setViewportView(pricing);

        mypet.setBackground(new java.awt.Color(219, 210, 196));
        mypet.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        mypet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "petname", "age", "breed"
            }
        ));
        mypet.setRowHeight(18);
        jScrollPane2.setViewportView(mypet);

        jButton1.setBackground(new java.awt.Color(255, 255, 204));
        jButton1.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 269, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(320, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          int row = pricing.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
         Pricing p = (Pricing) pricing.getValueAt(row, 0);
         int row1 = mypet.getSelectedRow();
        if(row1<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
         MyPets mypets = (MyPets) mypet.getValueAt(row1, 0);
         if(papp==null)
         {
             papp = new PetCareAppointment();
         }
     app = papp.addPetCare();
     Service service = new Service();
     service.setServicename(p.getServicetype());
     service.setPrice(p.getPrice());
     app.setService(service);
    app.setPetname(mypets.getPet().getPetName());
     app.setUsername(mypets.getUser().getUsername());
//     app.setMypet(mypet);
    // os.setMypetList(mypetslist);
     os.setPapp(papp);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable mypet;
    private javax.swing.JTable pricing;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
      DefaultTableModel model = (DefaultTableModel) mypet.getModel();
        model.setRowCount(0);
        System.out.println("populate on pet type");

        for (MyPets p : mypetslist.getPetsList()) {
           if(p.getUser().getUsername().equals(user.getUsername())){
            Object row[] = new Object[3];
            row[0] = p;
            row[2] = p.getPet().getAge();
            row[1] = p.getPet().getBreed();
        
            model.addRow(row);  
           }
        }
    }

    private void populatePricingTable() {
       
     DefaultTableModel model = (DefaultTableModel) pricing.getModel();
        model.setRowCount(0);
        System.out.println("pp+"+pricingDirectory.getPriceList().size());
        for (Pricing p : pricingDirectory.getPriceList()) {
            if (p.getServicetype().equalsIgnoreCase("training")) {
                Object row[] = new Object[2];
                row[0] = p;
                row[1] = p.getPrice();
                model.addRow(row);
            }
        }
    
    
    }
    
    }

