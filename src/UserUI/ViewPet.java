/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserUI;

import CartUI.CartPage;
import static SupplierUI.RegisterPet.scaleImage;
import java.awt.CardLayout;
import java.awt.Image;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import onlinepetstore.AdoptionList;
import onlinepetstore.AppointmentDirectory;
import onlinepetstore.ClothingDirectory;
import onlinepetstore.DoctorList;
import onlinepetstore.MerchOrderList;
import onlinepetstore.OnlineStore;
import onlinepetstore.Order;
import onlinepetstore.OrderItemPet;
import onlinepetstore.Pet;
import onlinepetstore.PetDirectory;
import onlinepetstore.PricingDirectory;
import onlinepetstore.User;
import onlinepetstore.UserDirectory;

/**
 *
 * @author moukthikamanapati
 */
public class ViewPet extends javax.swing.JPanel {

    /**
     * Creates new form ViewPet
     */
    JPanel userProcess;
    PetDirectory petDirectory;
    Order currentorder;
    ClothingDirectory clothingDirectory;
    PricingDirectory pricingDirectory;
    UserDirectory userDirectory;
    User user;
    DoctorList doclist;
    AppointmentDirectory apphis;
    AdoptionList adl;
    MerchOrderList merchList;
    OnlineStore os;
    private OrderItemPet orderitem;

    ViewPet(JPanel userProcess, PetDirectory petDirectory, Order currentorder, ClothingDirectory clothingDirectory, PricingDirectory pricingDirectory, UserDirectory userDirectory, User user, DoctorList doclist, AppointmentDirectory apphis, AdoptionList adl) {
        initComponents();
        this.userProcess = userProcess;
        this.petDirectory = petDirectory;
        this.currentorder = currentorder;
        this.clothingDirectory = clothingDirectory;
        this.pricingDirectory = pricingDirectory;
        this.user = user;
        this.doclist = doclist;
        this.apphis = apphis;
        this.adl = adl;
        populateTable();
        populatecmb();
        try {

            Icon icon = new ImageIcon(scaleImage(30, 30, ImageIO.read(new File("src/resources/shopping-cart.png"))));

            BtnCart.setIcon(icon);

        } catch (Exception ex) {
            System.out.println(ex);
        }
        //   BtnCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("src/resources/shopping-cart.png")));
    }

    ViewPet(JPanel userProcess, OnlineStore os, User user) {
        initComponents();
        this.userProcess = userProcess;
        this.os = os;
        petDirectory = os.getPetDirectory();
        this.user = user;
        //ySstem.out.println(petDirectory.getPetlist().get(7).getImage().hashCode());
//      labelimage.setIcon(petDirectory.getPetlist().get(7).getImage());
        populateTable();
        populatecmb();
        try {

            Icon icon = new ImageIcon(scaleImage(30, 30, ImageIO.read(new File("src/resources/shopping-cart.png"))));

            BtnCart.setIcon(icon);

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblpet.getModel();
        model.setRowCount(0);
        System.out.println("testing view pet");
        //  System.out.println(p.getHouse().getCommunity().getCity().getCityName());
        for (Pet p : petDirectory.getPetlist()) {
            if(p.getPetType()==null)
            {
                Object row[] = new Object[4];
                row[0] = p;
                row[1] = p.getBreed();
                row[2] = p.getAge();
                row[3] = p.getSex();
                model.addRow(row);
            }
            else if (!(p.getPetType().equalsIgnoreCase("Adoption"))) 
            {
                Object row[] = new Object[4];
                row[0] = p;
                row[1] = p.getBreed();
                row[2] = p.getAge();
                row[3] = p.getSex();
                model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        BtnViewSpecific = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblpet = new javax.swing.JTable();
        BtnBack = new javax.swing.JButton();
        BtnAddCart = new javax.swing.JButton();
        BtnCart = new javax.swing.JButton();
        cmbcat = new javax.swing.JComboBox<>();
        labelimage = new javax.swing.JLabel();

        setBackground(new java.awt.Color(123, 69, 12));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Shop Pet");

        BtnViewSpecific.setBackground(new java.awt.Color(255, 255, 204));
        BtnViewSpecific.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        BtnViewSpecific.setText("View");
        BtnViewSpecific.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnViewSpecificActionPerformed(evt);
            }
        });

        tblpet.setBackground(new java.awt.Color(219, 210, 196));
        tblpet.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        tblpet.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        tblpet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Breed", "Age", "sex"
            }
        ));
        tblpet.setGridColor(new java.awt.Color(153, 153, 153));
        tblpet.setRowHeight(24);
        tblpet.setRowMargin(5);
        jScrollPane1.setViewportView(tblpet);

        BtnBack.setBackground(new java.awt.Color(255, 255, 204));
        BtnBack.setFont(new java.awt.Font("Marker Felt", 1, 18)); // NOI18N
        BtnBack.setText("BACK");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        BtnAddCart.setBackground(new java.awt.Color(255, 255, 204));
        BtnAddCart.setFont(new java.awt.Font("Marker Felt", 1, 18)); // NOI18N
        BtnAddCart.setText("Add to Cart");
        BtnAddCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddCartActionPerformed(evt);
            }
        });

        BtnCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCartActionPerformed(evt);
            }
        });

        cmbcat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbcat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbcatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(459, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(341, 341, 341)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BtnBack)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BtnCart)))
                        .addGap(129, 129, 129))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(labelimage))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(BtnAddCart)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(524, 524, 524)
                .addComponent(BtnViewSpecific, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(BtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnCart, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(cmbcat))
                        .addGap(54, 54, 54)
                        .addComponent(BtnAddCart, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(labelimage))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addComponent(BtnViewSpecific, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnViewSpecificActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnViewSpecificActionPerformed
       int selectedRowIndex = tblpet.getSelectedRow();
        Pet p = (Pet) tblpet.getValueAt(selectedRowIndex, 0);
        // SpecificPet sp = new SpecificPet(userProcess, petDirectory,p,currentorder,clothingDirectory,pricingDirectory,userDirectory,user,doclist,apphis,adl);
        SpecificPet sp = new SpecificPet(userProcess, os, p);
        userProcess.add("SpecificPet", sp);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);


    }//GEN-LAST:event_BtnViewSpecificActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        UserWorkArea uw = new UserWorkArea(userProcess, os, user);
        userProcess.add("UserWorkArea", uw);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCartActionPerformed
        
        CartPage cp = new CartPage(userProcess, os,user);
        userProcess.add("CartPage", cp);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_BtnCartActionPerformed

    private void BtnAddCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddCartActionPerformed

         int selectedrow = tblpet.getSelectedRow();
        if (selectedrow < 0) {
            JOptionPane.showMessageDialog(this, "please select a product");
            return;
        }
        if(this.currentorder ==null){
        currentorder = new Order();
    }
        Pet p = (Pet) tblpet.getValueAt(selectedrow, 0);
       OrderItemPet test=  currentorder.findPet(p);
        if(test!=null){
       JOptionPane.showMessageDialog(this, "Pet already added");
            return;
        
        }
        orderitem = currentorder.addNewOrderItem();
        orderitem.setPet(p);
        orderitem.setUsername(user.getUsername());
        os.setOrder(currentorder);
        JOptionPane.showMessageDialog(null, "Added to Cart Successfully", "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_BtnAddCartActionPerformed

    private void cmbcatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbcatActionPerformed
        String pettype = (String) cmbcat.getSelectedItem();
        System.out.println(pettype);
        if (pettype == null) {
            populateTable(pettype);
        } else if (pettype.equalsIgnoreCase(""))
            populateTable();
        else
            populateTable(pettype);
    }//GEN-LAST:event_cmbcatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAddCart;
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnCart;
    private javax.swing.JButton BtnViewSpecific;
    private javax.swing.JComboBox<String> cmbcat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelimage;
    private javax.swing.JTable tblpet;
    // End of variables declaration//GEN-END:variables

    private void populateTable(String pettype) {
        DefaultTableModel model = (DefaultTableModel) tblpet.getModel();
        model.setRowCount(0);
        System.out.println("populate on Buy pet  table");
        //  System.out.println(p.getHouse().getCommunity().getCity().getCityName());
        for (Pet p : petDirectory.getPetlist()) {
           if (p.getCategory().equalsIgnoreCase(pettype)&!(p.getPetType().equalsIgnoreCase("Adoption"))) {
                Object row[] = new Object[4];
                row[0] = p;
                row[1] = p.getBreed();
                row[2] = p.getAge();
                row[3] = p.getSex();
                model.addRow(row);
            }
        }
    }

     private void populatecmb() {

        cmbcat.removeAllItems();
        cmbcat.addItem("");
        cmbcat.addItem("cat");
        cmbcat.addItem("dog");
        cmbcat.addItem("bird");
        cmbcat.addItem("fish");

    }
}