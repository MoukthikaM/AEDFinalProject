/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package SupplierUI;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import onlinepetstore.OnlineStore;
import onlinepetstore.Pet;
import onlinepetstore.PetDirectory;

/**
 *
 * @author moukthikamanapati
 */
public class EditPet extends javax.swing.JPanel {

    /**
     * Creates new form EditPet
//     */
//    public EditPet() {
//        initComponents();
//    }
    JPanel userProcess;
    PetDirectory petDirectory;
    private OnlineStore os;
    EditPet(JPanel userProcess, PetDirectory petDirectory) {
     initComponents();
        this.userProcess = userProcess;
        this.petDirectory = petDirectory;
        populateTable();
    }

    EditPet(JPanel userProcess, OnlineStore os) {
         initComponents();
        this.os = os;
        this.userProcess = userProcess;
        petDirectory = os.getPetDirectory();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dog = new javax.swing.JButton();
        cat = new javax.swing.JButton();
        Bird = new javax.swing.JButton();
        fish = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblPet = new javax.swing.JTable();
        BtnBack = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setBackground(new java.awt.Color(123, 69, 12));

        dog.setBackground(new java.awt.Color(255, 255, 204));
        dog.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        dog.setText("Dog");
        dog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dogActionPerformed(evt);
            }
        });

        cat.setBackground(new java.awt.Color(255, 255, 204));
        cat.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        cat.setText("Cat");
        cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catActionPerformed(evt);
            }
        });

        Bird.setBackground(new java.awt.Color(255, 255, 204));
        Bird.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        Bird.setText("Birds");
        Bird.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BirdActionPerformed(evt);
            }
        });

        fish.setBackground(new java.awt.Color(255, 255, 204));
        fish.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        fish.setText("Fish");
        fish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fishActionPerformed(evt);
            }
        });

        TblPet.setBackground(new java.awt.Color(219, 210, 196));
        TblPet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "PetName", "Sex", "Breed", "Price"
            }
        ));
        TblPet.setRowHeight(24);
        jScrollPane1.setViewportView(TblPet);

        BtnBack.setBackground(new java.awt.Color(255, 255, 204));
        BtnBack.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        BtnBack.setText("BACK");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 255, 204));
        update.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 255, 204));
        delete.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Bird, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fish, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnBack)))
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(update)
                .addGap(181, 181, 181)
                .addComponent(delete)
                .addContainerGap(163, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(dog)
                        .addGap(52, 52, 52)
                        .addComponent(cat)
                        .addGap(66, 66, 66)
                        .addComponent(Bird)
                        .addGap(63, 63, 63)
                        .addComponent(fish))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(BtnBack)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(delete))
                .addContainerGap(114, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
   int row = TblPet.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Pet p = (Pet) TblPet.getValueAt(row, 0);
        petDirectory.removePerson(p);
        populateTable();      
    }//GEN-LAST:event_deleteActionPerformed

    private void dogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dogActionPerformed
        populateTable("dog");
    }//GEN-LAST:event_dogActionPerformed

    private void catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catActionPerformed
         populateTable("cat");
    }//GEN-LAST:event_catActionPerformed

    private void BirdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BirdActionPerformed
       populateTable("bird");
    }//GEN-LAST:event_BirdActionPerformed

    private void fishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fishActionPerformed
        populateTable("fish");
    }//GEN-LAST:event_fishActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        os.setPetDirectory(petDirectory);
        SupplierWorkArea sw = new SupplierWorkArea(userProcess, os);
        userProcess.add("SupplierWorkArea", sw);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_BtnBackActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        int row = TblPet.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Pet pet = (Pet) TblPet.getValueAt(row, 0);
        UpdatePet ep = new UpdatePet(userProcess, os , pet);
        userProcess.add("UpdatePet", ep);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_updateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bird;
    private javax.swing.JButton BtnBack;
    private javax.swing.JTable TblPet;
    private javax.swing.JButton cat;
    private javax.swing.JButton delete;
    private javax.swing.JButton dog;
    private javax.swing.JButton fish;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
           DefaultTableModel model = (DefaultTableModel) TblPet.getModel();
        model.setRowCount(0);
        System.out.println("poopulate pets table");
        
        for (Pet p : petDirectory.getPetlist()) {

            Object row[] = new Object[4];
            row[0] = p;
            row[1] = p.getSex();
            row[2] = p.getBreed();
            row[3] = p.getPrice();
        
            model.addRow(row);
        }
    }

    private void populateTable(String pettype) {
      DefaultTableModel model = (DefaultTableModel) TblPet.getModel();
        model.setRowCount(0);
        System.out.println("poopulate pettype table");
        
        for (Pet p : petDirectory.getPetlist()) {
                if(p.getCategory().equalsIgnoreCase(pettype)){
            Object row[] = new Object[4];
            row[0] = p;
            row[1] = p.getSex();
            row[2] = p.getBreed();
            row[3] = p.getPrice();
        
            model.addRow(row);
        }
        }
    }
}
