/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package veternary;

import db4o.Email;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import onlinepetstore.AppointmentDirectory;
import onlinepetstore.Doctor;
import onlinepetstore.DoctorList;
import onlinepetstore.MyPets;
import onlinepetstore.MyPetsList;
import onlinepetstore.OnlineStore;
import onlinepetstore.Pet;
import onlinepetstore.User;

/**
 *
 * @author moukthikamanapati
 */
public class BookAppointment extends javax.swing.JPanel {
    
    private OnlineStore os;
    private MyPetsList mypetslist;

    /**
     * Creates new form BookAppoinment
     */
    public BookAppointment() {
        initComponents();
    }
    JPanel userProcess;
    AppointmentDirectory apphis;
    User user;
    DoctorList doclist;

//    BookAppointment(JPanel userProcess, User user, DoctorList doclist,AppointmentDirectory apphis) {
//        initComponents();
//        initComponents();
//        this.userProcess = userProcess;
//        this.user = user;
//        this.doclist = doclist;
//        populateTable();
//        populatecmb();
//        populatepetsTable();
//
//    }
    BookAppointment(JPanel userProcess, OnlineStore os, User user) {
        initComponents();
        this.userProcess = userProcess;
        this.os = os;
        this.user = user;
        mypetslist = os.getMypetList();
        doclist = os.getDoclist();
        apphis = os.getApphis();
        populateTable();
        populatecmb();
        populatepetsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbspec = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        doc = new javax.swing.JTable();
        book = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        userpet = new javax.swing.JTable();
        BtnBAck = new javax.swing.JButton();

        setBackground(new java.awt.Color(123, 69, 12));

        cmbspec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbspec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbspecActionPerformed(evt);
            }
        });

        doc.setBackground(new java.awt.Color(219, 210, 196));
        doc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doc Name", "spec", "hosp", "Price"
            }
        ));
        doc.setRowHeight(24);
        jScrollPane1.setViewportView(doc);

        book.setBackground(new java.awt.Color(255, 255, 204));
        book.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        book.setText("Book");
        book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookActionPerformed(evt);
            }
        });

        userpet.setBackground(new java.awt.Color(219, 210, 196));
        userpet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "petname", "age", "breed"
            }
        ));
        userpet.setRowHeight(24);
        jScrollPane2.setViewportView(userpet);

        BtnBAck.setBackground(new java.awt.Color(255, 255, 204));
        BtnBAck.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        BtnBAck.setText("BACK");
        BtnBAck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBAckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(cmbspec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(book))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(187, 187, 187))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnBAck)
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbspec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(book))
                .addGap(14, 14, 14)
                .addComponent(BtnBAck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(211, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbspecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbspecActionPerformed
        String docspec = (String) cmbspec.getSelectedItem();
        System.out.println(docspec);
        if (docspec == null) {
            populateTable(docspec);
        } else if (docspec.equalsIgnoreCase(""))
            populateTable();
        else
            populateTable(docspec);
    }//GEN-LAST:event_cmbspecActionPerformed

    private void bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookActionPerformed
        
        if (apphis == null) {
            System.out.println("apphis");
            apphis = new AppointmentDirectory();
        }
        onlinepetstore.Appointment app = apphis.addAppointment();
        int row = userpet.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        MyPets p = (MyPets) userpet.getValueAt(row, 0);
        row = doc.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Doctor doct = (Doctor) doc.getValueAt(row, 0);
        app.setDoc(doct);
        app.setPet(p.getPet());
        //System.out.println("username +++"+ p.getUser().getUsername());
        app.setUser(p.getUser());
        
        JOptionPane.showMessageDialog(null, "Booking confirmed", "Info", JOptionPane.INFORMATION_MESSAGE);
        Email e = new Email();
        String body = " Booking confirmed for veternary services ";
       e.sendMail(user.getEmail(), "Registration", body);

    }//GEN-LAST:event_bookActionPerformed

    private void BtnBAckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBAckActionPerformed
        os.setApphis(apphis);
        for(onlinepetstore.Appointment app :os.getApphis().getAppointmentList() )
                {
        System.out.println("appom+" + app.getUser().getUsername());
        }
        
        Appointment app = new Appointment(userProcess, os, user);
        userProcess.add("Appointment", app);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_BtnBAckActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBAck;
    private javax.swing.JButton book;
    private javax.swing.JComboBox<String> cmbspec;
    private javax.swing.JTable doc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable userpet;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) doc.getModel();
        model.setRowCount(0);
        System.out.println("populate on doc table");
        //  System.out.println(p.getHouse().getCommunity().getCity().getCityName());
        for (Doctor d : doclist.getDoctorList()) {
//           if(p.getCategory().equalsIgnoreCase(pettype))
//           {
            Object row[] = new Object[4];
            row[0] = d;
            row[1] = d.getSpecialisation();
            row[2] = d.getHospitalName();
            row[3] = d.getPrice();
            
            model.addRow(row);
//    }
        }
    }
    
    private void populatecmb() {
        
        cmbspec.removeAllItems();
        cmbspec.addItem("");
        cmbspec.addItem("worms");
        cmbspec.addItem("fever");
        
    }
    
    private void populateTable(String docspec) {
        
        DefaultTableModel model = (DefaultTableModel) doc.getModel();
        model.setRowCount(0);
        System.out.println("populate on doc table");
        //  System.out.println(p.getHouse().getCommunity().getCity().getCityName());
        for (Doctor d : doclist.getDoctorList()) {
            if (d.getSpecialisation().equalsIgnoreCase(docspec)) {
                Object row[] = new Object[4];
                row[0] = d;
                row[1] = d.getSpecialisation();
                row[2] = d.getHospitalName();
                row[3] = d.getPrice();
                
                model.addRow(row);
            }
        }
    }
    
    private void populatepetsTable() {
        DefaultTableModel model = (DefaultTableModel) userpet.getModel();
        model.setRowCount(0);
        System.out.println("populate on pet type");
        
        for (MyPets p : mypetslist.getPetsList()) {
            if (p.getUser().getUsername().equals(user.getUsername())) {
                Object row[] = new Object[3];
                row[0] = p;
                row[1] = p.getPet().getAge();
                row[2] = p.getPet().getBreed();
                model.addRow(row);
            }
        }
        
    }
}
