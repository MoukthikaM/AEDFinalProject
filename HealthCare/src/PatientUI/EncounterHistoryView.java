/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package PatientUI;

import healthcare.Encounter;
import healthcare.Patient;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moukthikamanapati
 */
public class EncounterHistoryView extends javax.swing.JPanel {

    /**
     * Creates new form EncounterHistoryView
     */
    JPanel userProcessContainer;
    Patient patient;

    EncounterHistoryView(JPanel userProcessContainer, Patient patient) {

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblenh = new javax.swing.JTable();

        tblenh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Heart Rate", "Bp", "weight", "respirationRate"
            }
        ));
        jScrollPane1.setViewportView(tblenh);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1189, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(879, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblenh;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblenh.getModel();
        model.setRowCount(0);
 try
        {  
            patient.getEncounterhistory();
            patient.getEncounterhistory().getEcounterlist();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "There is no encounter history for this person");
            return;
        }
        for (Encounter en : patient.getEncounterhistory().getEcounterlist()) {
            Object row[] = new Object[5];
            row[0] = en;
            row[1] = en.getVitals().getHeartrate();
            row[2] = en.getVitals().getBp();
            row[3] = en.getVitals().getWeight();
            row[4] = en.getVitals().getRespirationrate();
            model.addRow(row);
        }
    }
}
