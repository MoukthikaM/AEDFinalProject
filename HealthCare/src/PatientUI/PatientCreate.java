/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package PatientUI;

import healthcare.Patient;
import healthcare.PatientDirectory;
import healthcare.Person;
import healthcare.PersonDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moukthikamanapati
 */
public class PatientCreate extends javax.swing.JPanel {

    /**
     * Creates new form PatientCreate
     */
    JPanel userProcessContainer;
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;

    PatientCreate(JPanel userProcessContainer, PersonDirectory personDirectory, PatientDirectory patientDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        populateTable();
        populatePatientsTable();
    }

    private void populatePatientsTable() {

        DefaultTableModel model = (DefaultTableModel) tblpatient.getModel();
        model.setRowCount(0);

        for (Patient patient : patientDirectory.getPatientlist()) {
            Object row[] = new Object[7];
            row[0] = patient;
            row[1] = patient.getPerson().getName();
            row[2] = patient.getPerson().getAge();
            row[3] = patient.getInsuranceNumber();
            row[4] = patient.getPerson().getHouse().getHouseno();
            row[5] = patient.getPerson().getHouse().getCommunity().getCommunityName();
            row[6] = patient.getPerson().getHouse().getCommunity().getCity().getCityName();
            model.addRow(row);
        }
    }

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblperson.getModel();
        model.setRowCount(0);

        for (Person p : personDirectory.getPersonlist()) {
            Object row[] = new Object[6];
            row[0] = p;
            row[1] = p.getName();
            row[2] = p.getAge();
            row[3] = p.getHouse().getHouseno();
            row[4] = p.getHouse().getCommunity().getCommunityName();
            row[5] = p.getHouse().getCommunity().getCity().getCityName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblperson = new javax.swing.JTable();
        btnAddPatient = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblpatient = new javax.swing.JTable();
        btnEncounter = new javax.swing.JButton();
        lblins = new javax.swing.JLabel();
        txtIns = new javax.swing.JTextField();

        tblperson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "PersonID", "Person Name", "age", "House", "Community", "City"
            }
        ));
        jScrollPane1.setViewportView(tblperson);

        btnAddPatient.setText("Add as Patient");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        tblpatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PatientID", "PatientName", "PatientAge", "Insurance Number", "House", "community", "City"
            }
        ));
        jScrollPane2.setViewportView(tblpatient);

        btnEncounter.setText("Encounter History");
        btnEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterActionPerformed(evt);
            }
        });

        lblins.setText("Insurance Number:");

        txtIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddPatient, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIns, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEncounter))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblins, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1469, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        
          
        int selectedrow = tblperson.getSelectedRow();
        if (selectedrow < 0) {
            JOptionPane.showMessageDialog(this, "please select a Person to add");
            return;
        }
        if (txtIns.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter Insurance  details", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
             Person p = (Person) tblperson.getValueAt(selectedrow, 0);
        try {
             
            for (Patient pat : patientDirectory.getPatientList()) {
                if (pat.getPerson().getId() == p.getId()) {
                    JOptionPane.showMessageDialog(null, "Patient already exists", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Patient patient = patientDirectory.addPatient();
            patient.setPerson(p);
            patient.setPatientID(PatientDirectory.getCounter());
            patient.setInsuranceNumber(txtIns.getText());
            PatientDirectory.setCounter();
            // patient.setHouse(p.getHouse());
            System.out.println("settinng patient");
            //System.out.println(patient.getHouse().getHouseno() + "test");
            DefaultTableModel model = (DefaultTableModel) tblpatient.getModel();
            Object row[] = new Object[7];
            row[0] = patient;
            row[1] = patient.getPerson().getName();
            row[2] = patient.getPerson().getAge();
            row[3] = patient.getInsuranceNumber();
            row[4] = patient.getPerson().getHouse().getHouseno();
            row[5] = patient.getPerson().getHouse().getCommunity().getCommunityName();
            row[6] = patient.getPerson().getHouse().getCommunity().getCity().getCityName();
            model.addRow(row);


    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void btnEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterActionPerformed

        int selectedrow = tblpatient.getSelectedRow();
        if (selectedrow < 0) {
            JOptionPane.showMessageDialog(this, "please select a Person to add");
            return;
        }

        Patient patient = (Patient) tblpatient.getValueAt(selectedrow, 0);

        EncounterHistoryCreate Enview = new EncounterHistoryCreate(userProcessContainer, patient);
        userProcessContainer.add("EncounterCreate", Enview);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnEncounterActionPerformed

    private void txtInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton btnEncounter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblins;
    private javax.swing.JTable tblpatient;
    private javax.swing.JTable tblperson;
    private javax.swing.JTextField txtIns;
    // End of variables declaration//GEN-END:variables
}
