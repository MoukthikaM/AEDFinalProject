/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package veternary;

import UserUI.UserWorkArea;
import java.awt.CardLayout;
import javax.swing.JPanel;
import onlinepetstore.AppointmentDirectory;
import onlinepetstore.DoctorList;
import onlinepetstore.OnlineStore;
import onlinepetstore.User;
import ui.MainJFrame;

/**
 *
 * @author moukthikamanapati
 */
public class Appointment extends javax.swing.JPanel {

    /**
     * Creates new form Appointment
     */
    JPanel userProcess;

    User user;
    DoctorList doclist;
    AppointmentDirectory apphis;
    private OnlineStore os;
//    public Appointment(JPanel userProcess,User user, DoctorList doclist,AppointmentDirectory apphis)
//    {
//        initComponents();
//        this.apphis = apphis;
//        this.userProcess = userProcess;
//        this.user = user;
//        this.doclist=doclist;
//       
//    }

    public Appointment(JPanel userProcess, OnlineStore os, User user) {
       initComponents();
     this.os = os ;
     this.userProcess = userProcess;
     this.user= user;
     this.apphis = os.getApphis();
   //  System.out.println(os.getApphis().getAppointmentList().get(0).getDoc()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Book = new javax.swing.JButton();
        View = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setBackground(new java.awt.Color(123, 69, 12));

        Book.setBackground(new java.awt.Color(255, 255, 204));
        Book.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        Book.setText("BookAppointment");
        Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookActionPerformed(evt);
            }
        });

        View.setBackground(new java.awt.Color(255, 255, 204));
        View.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        View.setText("View Appointment");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(255, 255, 204));
        back.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(212, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Book, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(View, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(back)
                .addGap(96, 96, 96)
                .addComponent(Book, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookActionPerformed
       //  BookAppointment bapp = new BookAppointment(userProcess,user,doclist,apphis);
       this.user = user;
        //os.setApphis(apphis);
         BookAppointment bapp = new BookAppointment(userProcess,os,user);
        userProcess.add("BookAppointment", bapp);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_BookActionPerformed

    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
         this.user = user;
          // os.setApphis(apphis);
        for(onlinepetstore.Appointment app :os.getApphis().getAppointmentList() )
                {
        System.out.println("appom+" + app.getUser().getUsername());
        }
         System.out.println("user"+user.getUsername());
         ViewAppointment viewapp = new ViewAppointment(userProcess,os,user);
        userProcess.add("ViewAppointment", viewapp);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_ViewActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
          os.setApphis(apphis);
        for(onlinepetstore.Appointment app :os.getApphis().getAppointmentList() )
                {
        System.out.println("appom+" + app.getUser().getUsername());
        }
        
        UserWorkArea uw = new UserWorkArea(userProcess, os, user);
        userProcess.add("UserWorkArea", uw);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_backActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Book;
    private javax.swing.JButton View;
    private javax.swing.JButton back;
    // End of variables declaration//GEN-END:variables
}
