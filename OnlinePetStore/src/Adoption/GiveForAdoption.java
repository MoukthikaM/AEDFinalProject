/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Adoption;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import onlinepetstore.AdoptionList;
import onlinepetstore.MyPets;
import onlinepetstore.MyPetsList;
import onlinepetstore.OnlineStore;
import onlinepetstore.Pet;
import onlinepetstore.PetDirectory;
import onlinepetstore.User;

/**
 *
 * @author moukthikamanapati
 */
public class GiveForAdoption extends javax.swing.JPanel {

    JPanel userProcess;
    User user;
    PetDirectory petDirectory;
    AdoptionList adl;
    private OnlineStore os;
    MyPetsList mypetslist;
    private ArrayList<Pet> petList;

    public GiveForAdoption(JPanel userProcess, PetDirectory petDirectory, User user, AdoptionList adl) {
        initComponents();
        this.userProcess = userProcess;
        this.user = user;
        this.petDirectory = petDirectory;
        this.adl = adl;
        populateTable();
    }

    GiveForAdoption(JPanel userProcess, OnlineStore os, User user) {
        initComponents();
        this.userProcess = userProcess;
        this.os = os;
        this.user = user;
        this.petDirectory = os.getPetDirectory();
        this.mypetslist = os.getMypetList();
        populateTable();
              
    }

    /**
     * Creates new form GiveForAdoption
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mypets = new javax.swing.JTable();
        give = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setBackground(new java.awt.Color(123, 69, 12));

        mypets.setBackground(new java.awt.Color(219, 210, 196));
        mypets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Petname", "age", "Breed"
            }
        ));
        mypets.setRowHeight(24);
        jScrollPane1.setViewportView(mypets);

        give.setBackground(new java.awt.Color(255, 255, 204));
        give.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        give.setText("Put up for adoption");
        give.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giveActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(255, 255, 204));
        back.setFont(new java.awt.Font("Marker Felt", 1, 24)); // NOI18N
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(back)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(give)
                        .addGap(315, 315, 315))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(back)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(give, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void giveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giveActionPerformed

        Pet pet = petDirectory.addPet();
        String type = "adoption";
        int row = mypets.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
       MyPets petadd = (MyPets) mypets.getValueAt(row, 0);
        pet.setPetName(petadd.getPet().getPetName()); 
        pet.setAge(petadd.getPet().getAge());
          pet.setCategory(petadd.getPet().getCategory());
            pet.setBreed(petadd.getPet().getBreed());
            pet.setPetID(petadd.getPet().getPetID());
            pet.setLifeExp(petadd.getPet().getLifeExp());
            pet.setPetIns(petadd.getPet().getPetIns());
            pet.setPrice(0);
        System.out.println(pet.getPetName());
        pet.setPetType(type);
//        petList = os.getPetDirectory().getPetlist();
//        petList.add(pet);
        
        os.setPetDirectory(petDirectory);
            for(Pet p : os.getPetDirectory().getPetlist())
     {
         System.out.println("pet give up   : "+ p.getPetName()+ p.getPetType());
     }
       mypetslist.removeMyPets(petadd);
       os.setMypetList(mypetslist);
        JOptionPane.showMessageDialog(null, "give Pet  for adoption successful !", "Info", JOptionPane.INFORMATION_MESSAGE);
        mypetslist.removeMyPets(petadd);
        populateTable();

    }//GEN-LAST:event_giveActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
       os.setAdl(adl);
      
        AdoptionWorkArea add = new AdoptionWorkArea(userProcess, os, user);
        userProcess.add("AdoptionWorkArea", add);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.next(userProcess);
    }//GEN-LAST:event_backActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) mypets.getModel();
        model.setRowCount(0);
        System.out.println("populate on pet type");

        for (MyPets p : mypetslist.getPetsList()) {
          if(p.getUser().getUsername().equals(user.getUsername())){
            Object row[] = new Object[3];
            row[0] = p;

            row[1] = p.getPet().getAge();
            row[2] = p.getPet().getBreed();
            model.addRow(row);
        }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton give;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mypets;
    // End of variables declaration//GEN-END:variables
}
